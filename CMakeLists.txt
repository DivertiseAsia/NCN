cmake_minimum_required(VERSION 3.10)
project(block_chain)

set(CMAKE_CXX_STANDARD 11)
#SET (CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS_INIT} $ENV{LDFLAGS}
#        CACHE STRING "-lssl -lcrypto")

#SET (CMAKE_MODULE_LINKER_FLAGS ${CMAKE_MODULE_LINKER_FLAGS_INIT} $ENV{LDFLAGS}
#        CACHE STRING "-lssl -lcrypto")

add_executable(block_chain main.cpp ./block_chain/chain block_chain/kernel/messages/Message.cpp block_chain/kernel/messages/Message.h ./block_chain/Node.cpp ./block_chain/Node.h block_chain/utils/serialization/Serializer.cpp block_chain/utils/serialization/Serializer.h block_chain/utils/socket ./block_chain/utils ./block_chain/chain/block ./block_chain/chain/NodeState.cpp ./block_chain/chain/NodeState.h ./block_chain/chain/block/Block.cpp ./block_chain/chain/block/Block.h block_chain/kernel/components/Component.cpp block_chain/kernel/components/Component.h block_chain/algorithm/Hash.cpp block_chain/algorithm/Hash.h block_chain/chain/block/proof/metadatas/Metadata.h ./block_chain/chain/block/transaction ./block_chain/chain/block/transaction/Transaction.cpp ./block_chain/chain/block/transaction/Transaction.h block_chain/utils/socket/Peer.cpp block_chain/utils/socket/Peer.h block_chain/utils/socket/Socket.cpp block_chain/utils/socket/Socket.h block_chain/utils/socket/SocketServer.cpp block_chain/utils/socket/SocketServer.h block_chain/utils/Factory.h block_chain/algorithm/RSA.cpp block_chain/algorithm/RSA.h ./block_chain/utils/serialization ./block_chain/utils/serialization/Element.cpp ./block_chain/utils/serialization/ElementCreator.cpp block_chain/utils/serialization/Element.h ./block_chain/utils/serialization/json block_chain/utils/serialization/Parser.h ./block_chain/utils/serialization/json/JsonCreator.cpp block_chain/utils/serialization/json/JsonCreator.h ./block_chain/utils/serialization/json/JsonParser.cpp block_chain/utils/serialization/json/JsonParser.h transactions/StatusTransaction.cpp transactions/StatusTransaction.h transactions/MessagesTransaction.cpp transactions/MessagesTransaction.h serializer/CustomSerializer.h serializer/CustomSerializer.cpp block_chain/utils/Encoding.cpp block_chain/utils/Encoding.h block_chain/chain/block/proof/metadatas/Metadata.cpp block_chain/algorithm/MerkleTree.cpp block_chain/algorithm/MerkleTree.h database/Row.cpp database/Row.h block_chain/chain/state/Database.cpp block_chain/chain/state/Database.h block_chain/chain/state/Row.cpp block_chain/chain/state/Row.h transactions/MoneyTransaction.cpp transactions/MoneyTransaction.h block_chain/TransactionManager.cpp block_chain/TransactionManager.h block_chain/chain/block/proof/Proof.cpp block_chain/chain/block/proof/Proof.h block_chain/chain/block/proof/ProofOfWork.cpp block_chain/chain/block/proof/ProofOfWork.h block_chain/chain/block/proof/ProofOfStake.cpp block_chain/chain/block/proof/ProofOfStake.h block_chain/chain/block/proof/ProofOfHold.cpp block_chain/chain/block/proof/ProofOfHold.h block_chain/chain/block/proof/ProofOfUse.cpp block_chain/chain/block/proof/ProofOfUse.h block_chain/chain/block/proof/ProofOfStakeTime.cpp block_chain/chain/block/proof/ProofOfStakeTime.h block_chain/chain/block/proof/ProofOfMinimumAgedStake.cpp block_chain/chain/block/proof/ProofOfMinimumAgedStake.h block_chain/chain/block/proof/ProofOfImportance.cpp block_chain/chain/block/proof/ProofOfImportance.h block_chain/chain/block/proof/metadatas/ProofOfWorkMetadata.cpp block_chain/chain/block/proof/metadatas/ProofOfWorkMetadata.h block_chain/chain/Chain.cpp block_chain/chain/Chain.h reward/RewardTransaction.cpp reward/RewardTransaction.h block_chain/chain/block/transaction/Reward.cpp block_chain/chain/block/transaction/Reward.h block_chain/kernel/parsers/MessageParser.h block_chain/kernel/parsers/PeersAnswerParser.cpp block_chain/kernel/parsers/PeersAnswerParser.h block_chain/kernel/parsers/PeersAskParser.cpp block_chain/kernel/parsers/PeersAskParser.h block_chain/kernel/parsers/SignInParser.cpp block_chain/kernel/parsers/SignInParser.h block_chain/kernel/parsers/SignOutParser.cpp block_chain/kernel/parsers/SignOutParser.h block_chain/kernel/parsers/TransactionParser.cpp block_chain/kernel/parsers/TransactionParser.h block_chain/kernel/parsers/BlockParser.cpp block_chain/kernel/parsers/BlockParser.h block_chain/kernel/parsers/BlockAskParser.cpp block_chain/kernel/parsers/BlockAskParser.h block_chain/kernel/parsers/BlockAnswerParser.cpp block_chain/kernel/parsers/BlockAnswerParser.h block_chain/kernel/messages/TransactionMessage.cpp block_chain/kernel/messages/TransactionMessage.h block_chain/kernel/messages/BlockAskMessage.cpp block_chain/kernel/messages/BlockAskMessage.h block_chain/kernel/messages/SignMessage.cpp block_chain/kernel/messages/SignMessage.h block_chain/kernel/messages/SignInMessage.cpp block_chain/kernel/messages/SignInMessage.h block_chain/kernel/messages/SignOutMessage.cpp block_chain/kernel/messages/SignOutMessage.h block_chain/kernel/messages/BlockAnswerMessage.cpp block_chain/kernel/messages/BlockAnswerMessage.h block_chain/kernel/messages/AskPeersMessage.cpp block_chain/kernel/messages/AskPeersMessage.h block_chain/kernel/messages/AnswerPeersMessage.cpp block_chain/kernel/messages/AnswerPeersMessage.h block_chain/kernel/messages/BlockMessage.cpp block_chain/kernel/messages/BlockMessage.h)

# OpenSSL (find, include, link)
find_package(OpenSSL REQUIRED)
include_directories(${OPENSSL_INCLUDE_DIR})
target_link_libraries(${PROJECT_NAME} ${OPENSSL_LIBRARIES})
